$#include "PointCalculation/IndirectDefender.h"

class CVisionModule;

typedef struct KickOffArea {
	CGeoPoint _Left;
	CGeoPoint _Right;
	double baseDir;
	double radius;
}KickOffArea;

typedef struct TwoKickPos {
	CGeoPoint onePos;
	CGeoPoint anotherPos;
	CGeoPoint getOnePos();
	CGeoPoint getAnotherPos();
}TwoKickPos;

class CIndirectDefender:public CDefPos1G2D
{
	CIndirectDefender();
	~CIndirectDefender();
	CGeoPoint getDefPos(const CVisionModule* pVision,double radius, CGeoPoint leftUp, CGeoPoint rightDown,int mode);
	TwoKickPos getTwoDefPos(const CVisionModule* pVision,double radius1,CGeoPoint left1,CGeoPoint right1,double radius2,CGeoPoint left2,CGeoPoint right2);
	void generateTwoDefPos(const CVisionModule* pVision);
	virtual CGeoPoint generatePos(const CVisionModule* pVision);
	CGeoPoint DefendPos(const CGeoPoint ballPos,const double dir,double radius);
	void FindMinMax(int num);
};
