$#include "WorldModel/WorldModel.h"

class CWorldModel{
	CWorldModel();
	void registerVision(const CVisionModule* pVision);
	void registerOption(const COptionModule* pOption);
	const CVisionModule* vision() const;
	const COptionModule* option() const;
	const CVector	self2ball					(int current_cycle, int myNum = 0, int enemyNum = 0);
	const double	self2ballDist				(int current_cycle, int myNum = 0, int enemyNum = 0);
	const double	self2ballDir				(int current_cycle, int myNum = 0, int enemyNum = 0);
	const string	CurrentRefereeMsg			();
	int		OurRobotNum();
	bool	IsBallKicked(int);
	bool	IsBestPlayerChanged();
	string	CurrentBayes();
	bool    CanDefenceExit();
	double  timeToTarget(int player, const CGeoPoint target);
	bool NeedExitAttackDef(CGeoPoint leftUp, CGeoPoint rightDown, int mode);
	bool ball2MarkingTouch(CGeoPoint leftUp, CGeoPoint rightDown);
	bool isMarkingFrontValid(CGeoPoint checkPos, double checkDir);
	int getEnemyKickOffNum();
	bool checkEnemyKickOffNumChanged();
	int getMarkingTouchArea(CGeoPoint leftPos1,CGeoPoint leftPos2,CGeoPoint rightPos1,CGeoPoint rightPos2);
	void	SPlayFSMSwitchClearAll(bool clear_flag = false);
	const bool	KickDirArrived (int current_cycle, double kickdir, double kickdirprecision, int myNum = 0);
	const bool canProtectBall(int current_cycle, int myNum = 0);
	const bool canShootOnBallPos(int current_cycle, int myNum = 0);
	const bool canPassOnBallPos(int current_cycle,CGeoPoint& passPos,CGeoPoint& guisePos, int myNum = 0);
	const bool canKickAtEnemy(int current_cycle, CGeoPoint& kickDir,int myNum = 0,int priority=0);
	const string getBallStatus(int current_cycle,int meNum=0);
	const bool generatePassPoint(CGeoPoint& passOne,CGeoPoint& passTwo, CGeoPoint& passThree, CGeoPoint& passFour);
	const CGeoPoint getTandemPos(int myNum=0);
	const double getTandemDir(int myNum=0);
	const int getBallToucher();
	const bool IsOurBallByAutoReferee();
	void clearBallStateCouter();
	int getSuitSider();
	void setBallHandler(int num=0);
	bool isRecordRunPos();
	bool isBeingMarked(int myNum);
	bool isPassLineBlocked(int myNum, double allowance = 4.0);
	bool isShootLineBlocked(int myNum, double range = 150, double allowance = 3.0);
	bool isShootLineBlockedFromPoint(CGeoPoint pos, double range = 150);
	void drawReflect(int myNum);
	const CGeoPoint getLeftReflectPos(int myNum);
	const CGeoPoint getRightReflectPos(int myNum);
	const CGeoPoint getReflectPos(int myNum);
	const CGeoPoint getReflectTouchPos(int myNum, double y);
};
